@using Blazored.FluentValidation
@using Microsoft.AspNetCore.Components
@using ValidatorNotWorking.Requests

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Filled.EditNote" Class="mr-3 mb-n1" />
            Register
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@_registerUserModel" OnValidSubmit="SubmitAsync">
            <FluentValidationValidator @ref="_validator"/>
            <MudGrid>
                @* <MudItem xs="12"> *@
                @*     <MudTextField For="@(() => _registerUserModel.UserName)" @bind-Value="_registerUserModel.UserName" Label="User Name"/> *@
                @* </MudItem> *@
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField For="@(() => _registerUserModel.FirstName)" @bind-Value="_registerUserModel.FirstName" Label="First Name"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField For="@(() => _registerUserModel.LastName)" @bind-Value="_registerUserModel.LastName" Label="Last Name"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField T="string" Label="E-mail" @bind-Value="_registerUserModel.Email" For="@(() => _registerUserModel.Email)"/>
                </MudItem>
                @* <MudItem xs="12" sm="6" md="6"> *@
                @*     <MudTextField T="string" Label="Phone Number" @bind-Value="_registerUserModel.PhoneNumber" For="@(() => _registerUserModel.PhoneNumber)"/> *@
                @* </MudItem> *@
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField For="@(() => _registerUserModel.Password)" InputType="@_passwordInput" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" @bind-Value="_registerUserModel.Password" Label="Password"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField For="@(() => _registerUserModel.ConfirmPassword)" InputType="InputType.Password" @bind-Value="_registerUserModel.ConfirmPassword" Label="Confirm Password"/>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Disabled="@(!Validated)" Color="Color.Primary" Size="Size.Large" Style="width: 100%;">Register</MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    private FluentValidationValidator _validator;
    private InputType _passwordInput = InputType.Password;
    private string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    private bool _passwordVisibility;
    private RegisterRequest _registerUserModel = new();
    private bool Validated => _validator.Validate(options => { options.IncludeAllRuleSets(); });
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;
    
    private async Task SubmitAsync()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
    
    private void Cancel() =>  MudDialog.Cancel();

    private void TogglePasswordVisibility()
    {
        if (_passwordVisibility)
        {
            _passwordVisibility = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _passwordVisibility = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }
}